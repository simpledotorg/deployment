# load balancing tasks
---
- name: include monitoring variables (ports and secrets)
  include_vars:
    dir: ../../monitoring/vars/

- name: install HAProxy
  apt:
    pkg: "haproxy={{ haproxy_version }}"
    update_cache: yes
  become: true

- name: enable init script
  replace:
    dest: '/etc/default/haproxy'
    regexp: 'ENABLED=0'
    replace: 'ENABLED=1'

- name: load SSL cert files
  include_vars: "ssl-vault.yml"
  no_log: true

- name: copy SSL cert files
  copy:
    dest: "{{ item.key }}"
    content: "{{ item.value.content }}"
    owner: "{{ item.value.owner }}"
    group: "{{ item.value.group }}"
    mode: "{{ item.value.mode }}"
  with_dict: "{{ ssl_cert_files }}"
  no_log: true
  become: true

- name: generate bundled pem files
  shell: cat {{ item }}.crt {{ item }}.key > {{ item }}.pem
  with_items: "{{ haproxy_cert_names }}"
  become: true

- name: create crt-list file
  copy:
    content: "{{ haproxy_cert_names | map('regex_replace', '^(.*)$', '\\1.pem') | join('\n') }}"
    dest: "{{ haproxy_crt_list }}"
  become: true

- name: update HAProxy config
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    backup: yes
  become: true

- name: allow all tcp access to port 80
  ufw:
    rule: allow
    port: "{{ haproxy_frontend_http_port }}"
    proto: tcp
  become: true

- name: allow all tcp access to port 443
  ufw:
    rule: allow
    port: "{{ haproxy_frontend_https_port }}"
    proto: tcp
  become: true

- name: allow all tcp access to load balancer status page
  ufw:
    rule: allow
    port: "{{ haproxy_stats_port }}"
    proto: tcp
  become: true

- name: restart haproxy
  service:
    name: haproxy
    state: restarted

- name: restart rsyslog to begin logging
  service:
    name: rsyslog
    state: restarted
  become: true
