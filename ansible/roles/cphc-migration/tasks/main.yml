---
- name: install jemalloc
  apt:
    pkg: libjemalloc-dev=5.2.1-1ubuntu1
    state: present
  become: true

- name: ensure user level systemd dir exists
  file:
    path: /home/deploy/.config/systemd/user/
    state: directory
  become: true
  become_user: deploy

- name: copy sidekiq parent process systemd file
  template:
    src: config/systemd/user/sidekiq.service
    dest: /home/deploy/.config/systemd/user/sidekiq.service
  become: true
  become_user: deploy

- name: copy sidekiq systemd file
  template:
    src: config/systemd/user/sidekiq@.service
    dest: /home/deploy/.config/systemd/user/sidekiq@.service
  become: true
  become_user: deploy

- name: force reload service file
  systemd:
    daemon_reload: yes
    scope: user

- name: enable sidekiq
  systemd:
    name: sidekiq.service
    enabled: yes
    scope: user
  become: true
  become_user: deploy

- name: restart sidekiq
  systemd:
    name: sidekiq.service
    state: restarted
    scope: user
  tags: restart-sidekiq
  become: true
  become_user: deploy

- name: install dependencies necessary to connect to VPN
  apt:
    pkg:
      - libnss3-tools
      - firefox
    state:
      latest
  become: true

- name: ensure /opt/sslvpn-plus exists
  file:
    path: /opt/sslvpn-plus
    state: directory
  become: true

- name: Unarchive sslvpn-plus install script
  unarchive:
    remote_src: yes
    src: "{{ cphc_vpn.installer_url }}"
    dest: /home/deploy
    creates: /home/deploy/linux_phat_client
  become: true
  become_user: deploy

- name: Install sslvpn-plus client
  expect:
    chdir: /home/deploy/linux_phat_client
    command: ./install_linux_phat_client.sh
    creates: /opt/sslvpn-plus/naclient/naclient.conf
    responses:
      Do you want to continue: y
  become: true

- name: Stop existing CPHC connections
  shell:
    cmd: naclient logout
  become: true
  become_user: deploy
  ignore_errors: true

- name: Start CPHC VPN Connection
  expect:
    command: naclient login -profile {{ cphc_vpn.profile }} -user {{ cphc_vpn.username }} -password '{{ cphc_vpn.password }}'
    responses:
      continue?: y
  become: true
  become_user: deploy
  register: cphc_connection_status
  failed_when: cphc_connection_status.rc != 1

- name: Copy script to check VPN connection and alert
  template:
    src: cphc_connection_check.sh
    dest: /home/deploy/cphc_connection_check.sh
    mode: u=rwx,g=rx,o=rx
  become: true
  become_user: deploy

- name: Run VPN connection script with logs
- name: Copy script to check VPN connection and alert
  template:
    src: keep_vpn_alive.sh
    dest: /home/deploy/keep_vpn_alive.sh
    mode: u=rwx,g=rx,o=rx
  become: true
  become_user: deploy
